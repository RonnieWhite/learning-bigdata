Scala的特性：
    1) 可伸缩（Scalable）
    2) 纯正的面向对象语言
    3) 函数式语言
    4) 无缝的Java互操作
三种变量修饰符：
    1) val定义immutable variable
    2) var定义mutable variable
    3) lazy val 被调用时才会被计算，用来定义可能不会被调用的变量

数据类型：
    note_img/scala类型体系.png main\scala\note_img\scala类型体系.png
    ![](main/scala/note_img/scala类型体系.png)

函数是第一等公民，Scala语言支持：
    1) 把函数作为实参传递给另外一个函数
    2) 把函数作为返回值
    3) 把函数赋值给变量
    4) 把函数存储在数据结构里

匿名函数：
    1) 定义：val y = (x: Int) => x + 1
    2) 调用： y(10) 或 y.apply(10)

柯理化：
    柯理化函数(Curried Function) 把具有多个参数的函数转换为一条函数链，每个节点上是单一参数。

class、object和case class、case object
    1) scala不能定义静态成员，所以用定义的单例对象代之（object）
    2) 单例对象不能带参数，类可以
    3) 对象可以和类名一样，此时object被称为半生对象，class被称为伴生类，半生类和对象可以互相访问其私有属性，但前提是它们必须在一个源文件中。
    4) 类只会被编译，不会被执行
    5) case class被称为样例类，常用语模式匹配
    6) case class初始化时可以不用new，也可以加上（普通类必须加上new）
    7) case class 默认实现了eaquals hashCode toString copy等方法，并是可以序列化的（实现了Serializable）
    8) case class 构造函数参数是public的，可以直接访问,默认情况下不能修改属性值
    9) case class最重要的功能是支持模式匹配
    10) 类中有参和无参，当类有参数的时候，用case class，当类没有参数的时候那么用case object
